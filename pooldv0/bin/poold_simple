#!/usr/bin/env python

import os
import sys

from poold.base import PoolingHandler
import tornado.ioloop
import tornado.web


def usage():
    print 'Usage: poold.py [FILENAME]'
    print
    print 'Run poold with the settings from the python file FILENAME. If FILENAME is not'
    print 'specified, settings will be loaded from /etc/poold.conf.py.'
    print
    print 'The settings file must define a get_upstreams function that takes a'
    print 'tornado.httputil.HTTPServerRequest and returns a list of strings specifying'
    print 'upstream hosts to forward the request to. Each hostname may be specified in the'
    print 'form HOSTNAME:PORT, or HOSTNAME.'
    print
    print 'The settings file may also define POOLD_PORT to be an integer value indicating'
    print 'which port to listen on.'
    print

    sys.exit(1)


if __name__ == '__main__':
    if len(sys.argv) > 2:
        usage()
    elif len(sys.argv) == 2 and sys.argv[1] in ('-h', '--help'):
        usage()
    elif len(sys.argv) == 2:
        filename = sys.argv[1]
    else:
        filename = '/etc/poold.conf.py'

    settings = {}

    if not os.access(filename, os.R_OK):
        print 'Failed to read settings from {}'.format(filename)
        sys.exit(1)

    execfile(filename, settings, settings)

    if 'get_upstreams' not in settings:
        print 'Error: get_upstreams function was not found in settings'
        sys.exit(1)

    port = settings.get('POOLD_PORT', 8000)
    print 'Listening for connections on port {}'.format(port)

    application = tornado.web.Application([
        tornado.web.url(r"/.*", PoolingHandler, settings),
    ], autoreload=True, serve_traceback=True)

    application.listen(port)
    tornado.ioloop.IOLoop.instance().start()
